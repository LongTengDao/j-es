{
	"version":
		3,
	"file":
		"index.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","../lib/reserved-word/dist.js","../lib/unicode/dist.js","Literal.ts","Name.ts","Primitive.ts","Object.ts","Array.ts","exportify.ts","export.ts"],
	"sourcesContent":
		[
			"export default '0.10.3';",
			"\nexport var RESERVED_WORD_ES3 = /^(?:break|c(?:a(?:se|tch)|lass|on(?:st|tinue))|d(?:o|e(?:bugger|fault|lete))|e(?:lse|num|x(?:port|tends))|f(?:alse|inally|or|unction)|i(?:f|mport|n(?:stanceof)?)|n(?:ew|ull)|return|s(?:uper|witch)|t(?:h(?:is|row)|r(?:y|ue)|ypeof)|v(?:ar|oid)|w(?:hile|ith))$/;\n\nexport var RESERVED_WORD_ESM = /^(?:arguments|break|c(?:a(?:se|tch)|lass|on(?:st|tinue))|d(?:o|e(?:bugger|fault|lete))|e(?:lse|num|val|x(?:port|tends))|f(?:alse|inally|or|unction)|i(?:f|mp(?:lements|ort)|n(?:stanceof|terface)?)|let|n(?:ew|ull)|p(?:ackage|r(?:ivate|otected)|ublic)|return|s(?:tatic|uper|witch)|t(?:h(?:is|row)|r(?:y|ue)|ypeof)|v(?:ar|oid)|w(?:hile|ith)|yield)$/;\n",
			"\nexport var IDENTIFIER_NAME_ES6 = /^(?:[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])(?:[\\$0-9A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD46\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E\\uDC5F\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF])*$/;\n\nexport var IDENTIFIER_NAME_ES5 = /^[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u021F\\u0222-\\u0233\\u0250-\\u02AD\\u02B0-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u037A\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D7\\u03DA-\\u03F3\\u0400-\\u0481\\u048C-\\u04C4\\u04C7\\u04C8\\u04CB\\u04CC\\u04D0-\\u04F5\\u04F8\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0640-\\u064A\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06FA-\\u06FC\\u0710\\u0712-\\u072C\\u0780-\\u07A5\\u0905-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B36-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CDE\\u0CE0\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D60\\u0D61\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6A\\u0F88-\\u0F8B\\u1000-\\u1021\\u1023-\\u1027\\u1029\\u102A\\u1050-\\u1055\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1206\\u1208-\\u1246\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1286\\u1288\\u128A-\\u128D\\u1290-\\u12AE\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12CE\\u12D0-\\u12D6\\u12D8-\\u12EE\\u12F0-\\u130E\\u1310\\u1312-\\u1315\\u1318-\\u131E\\u1320-\\u1346\\u1348-\\u135A\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u1780-\\u17B3\\u1820-\\u1877\\u1880-\\u18A8\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u207F\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2131\\u2133-\\u2139\\u2160-\\u2183\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303A\\u3041-\\u3094\\u309D\\u309E\\u30A1-\\u30FA\\u30FC-\\u30FE\\u3105-\\u312C\\u3131-\\u318E\\u31A0-\\u31B7\\u3400-\\u4DB5\\u4E00-\\u9FA5\\uA000-\\uA48C\\uAC00-\\uD7A3\\uF900-\\uFA2D\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC][\\$0-9A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u021F\\u0222-\\u0233\\u0250-\\u02AD\\u02B0-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0300-\\u034E\\u0360-\\u0362\\u037A\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D7\\u03DA-\\u03F3\\u0400-\\u0481\\u0483-\\u0486\\u048C-\\u04C4\\u04C7\\u04C8\\u04CB\\u04CC\\u04D0-\\u04F5\\u04F8\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05A1\\u05A3-\\u05B9\\u05BB-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0640-\\u0655\\u0660-\\u0669\\u0670-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06FC\\u0710-\\u072C\\u0730-\\u074A\\u0780-\\u07B0\\u0901-\\u0903\\u0905-\\u0939\\u093C-\\u094D\\u0950-\\u0954\\u0958-\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A02\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A74\\u0A81-\\u0A83\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B36-\\u0B39\\u0B3C-\\u0B43\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE7-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3E-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D60\\u0D61\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC\\u0EDD\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6A\\u0F71-\\u0F84\\u0F86-\\u0F8B\\u0F90-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1021\\u1023-\\u1027\\u1029\\u102A\\u102C-\\u1032\\u1036-\\u1039\\u1040-\\u1049\\u1050-\\u1059\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1206\\u1208-\\u1246\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1286\\u1288\\u128A-\\u128D\\u1290-\\u12AE\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12CE\\u12D0-\\u12D6\\u12D8-\\u12EE\\u12F0-\\u130E\\u1310\\u1312-\\u1315\\u1318-\\u131E\\u1320-\\u1346\\u1348-\\u135A\\u1369-\\u1371\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u1780-\\u17D3\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18A9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u207F\\u20D0-\\u20DC\\u20E1\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2131\\u2133-\\u2139\\u2160-\\u2183\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303A\\u3041-\\u3094\\u3099\\u309A\\u309D\\u309E\\u30A1-\\u30FE\\u3105-\\u312C\\u3131-\\u318E\\u31A0-\\u31B7\\u3400-\\u4DB5\\u4E00-\\u9FA5\\uA000-\\uA48C\\uAC00-\\uD7A3\\uF900-\\uFA2D\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE20-\\uFE23\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF65-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]*$/;\n\nexport var IDENTIFIER_NAME_ES3 = /^[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u01F5\\u01FA-\\u0217\\u0250-\\u02A8\\u02B0-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u037A\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D6\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2-\\u03F3\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E-\\u0481\\u0490-\\u04C4\\u04C7\\u04C8\\u04CB\\u04CC\\u04D0-\\u04EB\\u04EE-\\u04F5\\u04F8\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0640-\\u064A\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D3\\u06D5\\u06E5\\u06E6\\u0905-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B36-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CDE\\u0CE0\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D60\\u0D61\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F69\\u0F88-\\u0F8B\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u207F\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2131\\u2133-\\u2138\\u2160-\\u2182\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3041-\\u3094\\u309D\\u309E\\u30A1-\\u30FA\\u30FC-\\u30FE\\u3105-\\u312C\\u3131-\\u318E\\u4E00-\\u9FA5\\uAC00-\\uD7A3\\uF900-\\uFA2D\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC][\\$0-9A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u01F5\\u01FA-\\u0217\\u0250-\\u02A8\\u02B0-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u0300-\\u0345\\u0360\\u0361\\u037A\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D6\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2-\\u03F3\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E-\\u0481\\u0483-\\u0486\\u0490-\\u04C4\\u04C7\\u04C8\\u04CB\\u04CC\\u04D0-\\u04EB\\u04EE-\\u04F5\\u04F8\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05A1\\u05A3-\\u05B9\\u05BB-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0640-\\u0652\\u0660-\\u0669\\u0670-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0901-\\u0903\\u0905-\\u0939\\u093C-\\u094D\\u0950-\\u0954\\u0958-\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A02\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A74\\u0A81-\\u0A83\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B36-\\u0B39\\u0B3C-\\u0B43\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE7-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3E-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D60\\u0D61\\u0D66-\\u0D6F\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC\\u0EDD\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F69\\u0F71-\\u0F84\\u0F86-\\u0F8B\\u0F90-\\u0F95\\u0F97\\u0F99-\\u0FAD\\u0FB1-\\u0FB7\\u0FB9\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u207F\\u20D0-\\u20DC\\u20E1\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2131\\u2133-\\u2138\\u2160-\\u2182\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3041-\\u3094\\u3099\\u309A\\u309D\\u309E\\u30A1-\\u30FE\\u3105-\\u312C\\u3131-\\u318E\\u4E00-\\u9FA5\\uAC00-\\uD7A3\\uF900-\\uFA2D\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1E-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE20-\\uFE23\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF65-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]*$/;\n\nexport var Cf = /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC38]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/g;\n",
			"import RegExp from '.RegExp';\nimport Infinity from '.Infinity';\nimport Object from '.Object';\nimport throwError from '.throw.Error';\n\nimport { Cf } from 'lib:unicode';\n\nexport var _Infinity = -Infinity;\n\nexport function NullLiteral ()         {\n\treturn 'null';\n}\n\nexport function BooleanLiteral (value         )                   {\n\treturn value ? 'true' : 'false';\n}\n\nexport var is                                                = Object.is || function is (value        ) { return value===0 && 1/value<0; };\nexport function NumericLiteral (value        )         {\n\treturn value===Infinity || value===_Infinity || value!==value\n\t\t? /*#__PURE__*/ throwError('NumericLiteral('+value+')')\n\t\t: ( is(value, -0) ? '-' : '' )+value;\n}\n\nvar CANT_IN_SINGLE_QUOTE = /[\\n\\r'\\\\\\u2028\\u2029]/g;\nfunction staticallyEscape (cant_in_single_quote                              )         {\n\treturn CHAR_TO_ESCAPED[cant_in_single_quote];\n}\n\nvar CHAR_TO_ESCAPED = { '\\n': '\\\\n', '\\r': '\\\\r', '\\'': '\\\\\\'', '\\\\': '\\\\\\\\', '\\u2028': '\\\\u2028', '\\u2029': '\\\\u2029' };\nfunction dynamicallyEscape (char_in_cf        )         {\n\tif ( char_in_cf.length>1 ) {\n\t\treturn dynamicallyEscape(char_in_cf.charAt(0))+dynamicallyEscape(char_in_cf.charAt(1));\n\t}\n\tvar hex         = char_in_cf.charCodeAt(0).toString(16).toUpperCase();\n\tswitch ( hex.length ) {\n\t\tcase 4:\n\t\t\treturn '\\\\u'+hex;\n\t\tcase 3:\n\t\t\treturn '\\\\u0'+hex;\n\t\tcase 2:\n\t\t\treturn '\\\\x'+hex;\n\t}\n\treturn '\\\\x0'+hex;\n}\n\n                                           \n\nexport function StringLiteral (value        )         {\n\treturn '\\''\n\t\t+value\n\t\t.replace(CANT_IN_SINGLE_QUOTE, staticallyEscape            )\n\t\t.replace(Cf, dynamicallyEscape            )\n\t\t+'\\'';\n}\n\nvar EOL = /\\\\[^\\s\\S]|[\\n\\r\\/\\u2028\\u2029]/g;\nfunction EOL_replacer (part        ) {\n\tswitch ( part ) {\n\t\tcase '\\n':\n\t\tcase '\\\\\\n':\n\t\t\treturn '\\\\n';\n\t\tcase '\\r':\n\t\tcase '\\\\\\r':\n\t\t\treturn '\\\\r';\n\t\tcase '/':\n\t\t\treturn '\\\\/';\n\t\tcase '\\u2028':\n\t\tcase '\\\\\\u2028':\n\t\t\treturn '\\\\u2028';\n\t\tcase '\\u2029':\n\t\tcase '\\\\\\u2029':\n\t\t\treturn '\\\\u2029';\n\t}\n\treturn part;\n}\nvar AS_ES5 = ''+RegExp('')==='//' || ''+RegExp('/')==='///' || ''+RegExp('\\n')==='/\\n/'\n\t? function AS_ES5 (literal        ) {\n\t\tvar index         = literal.length;\n\t\twhile ( literal.charAt(--index)!=='/' ) { }\n\t\tvar source         = literal.slice(1, index);\n\t\tsource = source ? source.replace(EOL, EOL_replacer) : '(?:)';\n\t\treturn '/'+source+literal.slice(index);\n\t}\n\t: function (literal        ) { return literal; };\nvar MAYBE_ES3 = /\\/[gim]*$/;\nvar SLASH_NUL = /(?!^)\\/(?![a-z]*$)|\\x00|\\\\[\\s\\S]/g;\nfunction SLASH_NUL_replacer (part        ) { return part==='\\x00' ? '\\\\x00' : part==='/' ? '\\\\/' : part; }\nexport function RegularExpressionLiteral (value        )         {\n\tvar literal         = AS_ES5(''+value);\n\treturn MAYBE_ES3.test(literal)\n\t\t? literal.replace(Cf, dynamicallyEscape            ).replace(SLASH_NUL, SLASH_NUL_replacer)\n\t\t: literal;\n}\n\nexport function BigIntLiteral (value        )         {\n\treturn value+'n';\n}\n",
			"var LIKE_SAFE_INTEGER = /^(?:0|[1-9]\\d{0,15})$/;\nvar LIKE_ARRAY_INDEX = /^(?:0|[1-4]\\d{0,9}|[5-9]\\d{0,8})$/;\nexport function isArrayIndex (key        )          {\n\treturn LIKE_ARRAY_INDEX.test(key) && key       <4294967295;\n}\nexport function isIntegerIndex (key        )          {\n\treturn LIKE_SAFE_INTEGER.test(key) && key       <=9007199254740991;\n}\n\nimport { RESERVED_WORD_ES3, RESERVED_WORD_ESM } from 'lib:reserved-word';\nexport function isReservedWord (name        , noStrict          )          {\n\treturn noStrict\n\t\t? RESERVED_WORD_ES3.test(name)\n\t\t: RESERVED_WORD_ESM.test(name);\n}\n\nimport { IDENTIFIER_NAME_ES6, IDENTIFIER_NAME_ES3, IDENTIFIER_NAME_ES5 } from 'lib:unicode';\nexport function isIdentifierName (name        , ES         )          {\n\tif ( ES ) {\n\t\tif ( ES>=6 ) { return IDENTIFIER_NAME_ES6.test(name); }\n\t\tif ( ES>=5 ) { return IDENTIFIER_NAME_ES5.test(name); }\n\t}\n\treturn IDENTIFIER_NAME_ES3.test(name);\n}\nexport function isIdentifier (id        , ES         , noStrict          )          {\n\treturn isIdentifierName(id, ES) && !isReservedWord(id, noStrict);\n}\nexport function isPropertyName (key        , ES         )          {\n\treturn isIdentifierName(key, ES)\n\t\t? ES >=5 || !RESERVED_WORD_ES3.test(key)\n\t\t: isIntegerIndex(key);\n}\n\nimport { StringLiteral } from './Literal';\nexport function PropertyName (key        , ES         )         {\n\treturn isPropertyName(key, ES) ? key : StringLiteral(key);// ['__proto__']\n}\nexport function PropertyAccessor (key        , ES         )         {\n\tif ( isIdentifierName(key, ES) ) { if ( ES >=5 || !RESERVED_WORD_ES3.test(key) ) { return '.'+key; } }\n\telse { if ( isIntegerIndex(key) ) { return '['+key+']'; } }\n\treturn '['+StringLiteral(key)+']';\n}\nexport function PropertyAccessors (keys          , ES         )         {\n\tvar propertyAccessors         = '';\n\tfor ( var length = keys.length, index = 0; index<length; ++index ) {\n\t\tpropertyAccessors += PropertyAccessor(keys[index], ES);\n\t}\n\treturn propertyAccessors;\n}\n",
			"import Infinity from '.Infinity';\nimport undefined from '.undefined';\nimport isArray from '.Array.isArray?=';\nimport isMap from '.class.isMap';\nimport isSet from '.class.isSet';\nimport isDate from '.class.isDate';\nimport isRegExp from '.class.isRegExp';\n\nimport { StringLiteral, _Infinity, is } from './Literal';\n\nexport default function Primitive                                       \n\t                 \n\t\t                   \n\t\t                  \n\t\t             \n\t     \n\t\t                                     \n\t\t\t              \n\t\t\t                                                      \n\t\t\t                  \n\t\t\t               \n\t\t           \n\t   (\n\tvalue                      ,\n\tkey              ,\n\tobject        ,\n\toptions         \n)         {\n\tswitch ( value ) {\n\t\tcase null:\n\t\t\treturn 'null';\n\t\tcase true:\n\t\t\treturn 'true';\n\t\tcase false:\n\t\t\treturn 'false';\n\t\tcase undefined:\n\t\t\treturn options.undefined || '';\n\t\tcase Infinity:\n\t\t\treturn options.Infinity || '';\n\t\tcase _Infinity:\n\t\t\treturn options.Infinity ? '-'+options.Infinity : '';\n\t}\n\tif ( value!==value ) { return options.NaN || ''; }\n\tswitch ( typeof value ) {\n\t\tcase 'number':\n\t\t\treturn ( is(value, -0) ? '-' : '' )+value;\n\t\tcase 'string':\n\t\t\treturn StringLiteral(value);\n\t\tcase 'bigint':\n\t\t\treturn options.bigint ? options.bigint(value, key, object) : '';\n\t\tcase 'object':\n\t\t\treturn (\n\t\t\t\toptions.Array && isArray(value) ? options.Array(value, key, object) :\n\t\t\t\t\toptions.Map && isMap(value) ? options.Map(value, key, object) :\n\t\t\t\t\t\toptions.Set && isSet(value) ? options.Set(value, key, object) :\n\t\t\t\t\t\t\toptions.Date && isDate(value) ? options.Date(value, key, object) :\n\t\t\t\t\t\t\t\toptions.RegExp && isRegExp(value) ? options.RegExp(value, key, object) :\n\t\t\t\t\t\t\t\t\toptions.object ? options.object(value, key, object) : ''\n\t\t\t);\n\t\tcase 'function':\n\t\t\treturn options['function'] ? options['function'](value, key, object) : '';\n\t\tcase 'symbol':\n\t\t\treturn options.symbol ? options.symbol(value, key, object) : '';\n\t}\n\treturn options.unknown ? options.unknown(value, key, object) : '';\n};\n\n                    \n\t              \n\t              \n\t            \n\t                  \n\t             \n\t          \n\t              \n\t              \n\t                                                                                                                                        \n\t                \n  \n",
			"import hasOwnProperty from '.Object.prototype.hasOwnProperty';\n\nimport { PropertyName } from './Name';\nimport Primitive from './Primitive';\n\nexport function ObjectLiteral (object                        , options   \n\t            \n\t                                          \n\t                                           \n\t                  \n\t                                            \n\t                     \n\t                                           \n\t                                           \n\t                   \n )         {\n\tvar pairs           = [];\n\tvar open         = '{';\n\tvar close         = '}';\n\tvar _colon_         = ( options.key_colon || '' )+':'+( options.colon_value || '' );\n\tvar ES         = options.ES || 0;\n\tfor ( var key in object ) {\n\t\tif ( hasOwnProperty.call(object, key) ) {\n\t\t\tvar value = Primitive(object[key                ], key, object, options      );\n\t\t\tif ( value ) {\n\t\t\t\tif ( key==='__proto__' && !options.__safe__ ) {\n\t\t\t\t\tif ( ES>=6 ) { key = '[\\'__proto__\\']'       ; }\n\t\t\t\t\telse {\n\t\t\t\t\t\topen = '/*#__PURE__*/function(p,o){o.__proto__=_.p;return o}({'+( options.open_first || '' )+'p'+_colon_+value+( options.last_close || '' )+'},{';\n\t\t\t\t\t\tclose = '})';\n\t\t\t\t\t\tvalue = 'null';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse { key = PropertyName(key, ES)       ; }\n\t\t\t\tpairs.push(key+_colon_+value);\n\t\t\t}\n\t\t}\n\t}\n\treturn open+(\n\t\tpairs.length\n\t\t\t? ( options.open_first || '' )+pairs.join(( options.value_comma || '' )+','+( options.comma_next || '' ))+( options.last_close || '' )\n\t\t\t: ( options.open_close || '' )\n\t)+close;\n}\n",
			"import Primitive from './Primitive';\n\nexport function ArrayLiteral (\n\tarray                 ,\n\toptions   \n\t\t            \n\t\t                                   \n\t\t                                    \n\t\t                    \n\t\t                                    \n\t\t                                    \n\t \n)         {\n\tvar items          ;\n\tvar length = array.length;\n\tif ( length===1 ) {\n\t\tvar item = Primitive(array[0], 0, array, options      );\n\t\tif ( item || options.ES >=5 ) { items = [ item ]; }\n\t\telse {\n\t\t\treturn '/*#__PURE__*/function(){var a=['+( options.open_first || '' )+( options.last_close || '' )+'];a.length=1;return a}()';\n\t\t}\n\t}\n\telse {\n\t\titems = [];\n\t\tfor ( var index = 0; index<length; ++index ) {\n\t\t\titems.push(Primitive(array[index], index, array, options      ));\n\t\t}\n\t}\n\treturn '['+(\n\t\titems.length\n\t\t\t? ( options.open_first || '' )+items.join(( options.item_comma || '' )+','+( options.comma_next || '' ))+( options.last_close || '' )\n\t\t\t: options.open_close || ''\n\t)+']';\n}\n",
			"import hasOwnProperty from '.Object.prototype.hasOwnProperty';\nimport undefined from '.undefined';\nimport isArray from '.Array.isArray?=';\nimport isMap from '.class.isMap';\nimport isSet from '.class.isSet';\nimport isDate from '.class.isDate';\nimport isRegExp from '.class.isRegExp';\n\nimport { isIdentifier, PropertyName } from './Name';\nimport Primitive from './Primitive';\n\nvar SAFE = /^[`~!@#%^&*()\\-=+[{\\]}\\\\|;:'\",<.>\\/?\\s]/;\n\nexport default function exportify (\n\tobject     ,\n\toptions   \n\t\t            \n\t\t                              \n\t\t                          \n\t\t                     \n\t\t                    \n\t\t                    \n\t\t                   \n\t\t                     \n\t\t                     \n\t\t                    \n\t\t                    \n\t\t                         \n\t\t                        \n\t\t                       \n\t\t                   \n\t \n)         {\n\tif ( typeof object!=='object' || object===null || isArray(object) || isMap(object) || isSet(object) || isDate(object) || isRegExp(object) ) {\n\t\tvar $default$ = Primitive(object, undefined       , undefined       , options      );\n\t\tif ( $default$ ) {\n\t\t\t$default$ = ( options.default_value || '' )+$default$;\n\t\t\treturn 'export default'+( SAFE.test($default$) ? '' : ' ' )+( options.value_semicolon || '' )+';';\n\t\t}\n\t\treturn '';\n\t}\n\tvar ES         = options.ES || 0;\n\tvar gteES6          = ES>=6;\n\tvar export_$_ = 'export '+( options.let || ( gteES6 ? 'const' : 'var' ) )+' ';\n\tvar _equal_         = ( options.identifier_equal || '' )+'='+( options.equal_value || '' );\n\tvar _colon_         = ( options.key_colon || '' )+':'+( options.colon_value || '' );\n\tvar semicolon_         = ( options.value_semicolon || '' )+';'+( options.semicolon_next || '' );\n\tvar named         = '';\n\tvar pairs           = [];\n\tvar open         = '{';\n\tvar close         = '}';\n\tfor ( var key in object ) {\n\t\tif ( hasOwnProperty.call(object, key) ) {\n\t\t\tvar value = Primitive(object[key], key, object, options      );\n\t\t\tif ( value ) {\n\t\t\t\tif ( isIdentifier(key, ES) ) {\n\t\t\t\t\tnamed += export_$_+key+_equal_+value+semicolon_;\n\t\t\t\t\tif ( gteES6 ) { pairs.push(key); }\n\t\t\t\t\telse if ( key==='__proto__' && !options.__safe__ ) {\n\t\t\t\t\t\topen = '/*#__PURE__*/function(o){o.__proto__=__proto__;return o}({';\n\t\t\t\t\t\tclose = '})';\n\t\t\t\t\t\tpairs.push('__proto__'+_colon_+'null');\n\t\t\t\t\t}\n\t\t\t\t\telse { pairs.push(key+_colon_+key); }\n\t\t\t\t}\n\t\t\t\telse { pairs.push(PropertyName(key, ES)+_colon_+value); }\n\t\t\t}\n\t\t}\n\t}\n\treturn named+\n\t\t'export default'+( options.default_value || '' )+open+(\n\t\t\tpairs.length\n\t\t\t\t? ( options.open_first || '' )+pairs.join(( options.value_comma || '' )+','+( options.comma_next || '' ))+( options.last_close || '' )\n\t\t\t\t: ( options.open_close || '' )\n\t\t)+close+';';\n};\n",
			"import version from './version?text';\n\nimport {\n\tisReservedWord,\n\t\n\tisIdentifierName,\n\tisIdentifier,\n\tisArrayIndex,\n\tisIntegerIndex,\n\tisPropertyName,\n\t\n\tPropertyName,\n\tPropertyAccessor,\n\tPropertyAccessors,\n} from './Name';\n\nimport {\n\tStringLiteral,\n\tNumericLiteral,\n\tBigIntLiteral,\n\tRegularExpressionLiteral,\n} from './Literal';\n\nimport { ObjectLiteral } from './Object';\nimport { ArrayLiteral } from './Array';\n\nimport exportify from './exportify';\n\nexport {\n\t\n\tversion,\n\t\n\tisReservedWord,\n\t\n\tisIdentifierName,\n\tisIdentifier,\n\tisArrayIndex,\n\tisIntegerIndex,\n\tisPropertyName,\n\tPropertyName,\n\tPropertyAccessor,\n\tPropertyAccessors,\n\t\n\tStringLiteral,\n\tNumericLiteral,\n\tBigIntLiteral,\n\tRegularExpressionLiteral,\n\t\n\tObjectLiteral,\n\tArrayLiteral,\n\t\n\texportify,\n\t\n};\n\nimport Default from '.default?=';\nexport default Default({\n\t\n\tversion: version,\n\t\n\tisReservedWord: isReservedWord,\n\t\n\tisIdentifierName: isIdentifierName,\n\tisIdentifier: isIdentifier,\n\tisArrayIndex: isArrayIndex,\n\tisIntegerIndex: isIntegerIndex,\n\tisPropertyName: isPropertyName,\n\tPropertyName: PropertyName,\n\tPropertyAccessor: PropertyAccessor,\n\tPropertyAccessors: PropertyAccessors,\n\t\n\tStringLiteral: StringLiteral,\n\tNumericLiteral: NumericLiteral,\n\tBigIntLiteral: BigIntLiteral,\n\tRegularExpressionLiteral: RegularExpressionLiteral,\n\t\n\tObjectLiteral: ObjectLiteral,\n\tArrayLiteral: ArrayLiteral,\n\t\n\texportify: exportify\n\t\n});\n"
		],
	"names":
		["undefined"],
	"mappings":
		"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"
}